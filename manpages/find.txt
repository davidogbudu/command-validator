NAME
       find -- walk a file hierarchy

SYNOPSIS
       find [-H | -L | -P] [-EXdsx] [-f path] path ... [expression]
       find [-H | -L | -P] [-EXdsx] -f path [path ...] [expression]

DESCRIPTION
       The find utility recursively descends the directory tree for each path
       listed, evaluating an expression (composed of the "primaries" and
       "operands" listed below) in terms of each file in the tree.

       The options are as follows:

       -E               Interpret regular expressions following the -regex and
                        -iregex primaries as extended (modern) regular expressions
                        rather than basic regular expressions (BRE's). The re_format(7)
                        manual page fully describes both formats.

       -H               Cause the file information and file type (see stat(2)) returned
                        for each symbolic link specified on the command line to be those
                        of the file referenced by the link, not the link itself. If the
                        referenced file does not exist, the file information and type
                        will be for the link itself. File information of all symbolic
                        links not on the command line is that of the link itself.

       -L               Cause the file information and file type (see stat(2)) returned
                        for each symbolic link to be those of the file referenced by the
                        link, not the link itself. If the referenced file does not exist,
                        the file information and type will be for the link itself. This
                        option is equivalent to the deprecated -follow primary.

       -P               Cause the file information and file type (see stat(2)) returned
                        for each symbolic link to be those of the link itself. This is
                        the default.

       -X               Permit find to be safely used in conjunction with xargs(1). If
                        a file name contains any of the delimiting characters used by
                        xargs(1), a diagnostic message is displayed on standard error,
                        and the file is skipped. The delimiting characters include single
                        (" ' ") and double (" " ") quotes, backslash ("\"), space, tab
                        and newline characters.

                        However, you may wish to consider the -print0 primary in
                        conjunction with "xargs -0" as an effective alternative.

       -d               Cause find to perform a depth-first traversal.

                        This option is a BSD-specific equivalent of the -depth primary
                        specified by IEEE Std 1003.1-2001 ("POSIX.1"). Refer to its
                        description under "PRIMARIES" for more information.

       -f path          Add path to the list of paths that will be recursed into. This
                        is useful when path begins with a character that would otherwise
                        be interpreted as an expression, namely "", "!", "(", and "-".

       -s               Cause find to traverse the file hierarchies in lexicographical
                        order, i.e., alphabetical order within each directory. Note:
                        `find -s' and `find | sort' may give different results.

                        For example, `find -s' puts a directory `foo' with all its
                        contents before a directory `foo'. but `find | sort' puts the
                        directory name `foo' before any string like `foo/bar' because
                        `.' goes before `/` in ASCII. In locales other than C results
                        may vary more due to collation differences.

       -x               Prevent find from descending into directories that have a device
                        number different than that of the file from which the descent
                        began.

                        This option is equivalent to the deprecated -xdev primary.

PRIMARIES
       All primaries which take a numeric argument allow the number to be preceded
       by a plus sign ("+") or a minus sign ("-"). A preceding plus sign means
       "more than n", a preceding minus sign means "less than n" and neither
       means "exactly n".

       -Bmin n          True if the difference between the time of a file's inode creation
                        and the time find was started, rounded up to the next full minute,
                        is n minutes.

       -Bnewer file     Same as -newerBm.

       -Btime n[smhdw]  If no units are specified, this primary evaluates to true if
                        the difference between the time of a file's inode creation and the
                        time find was started, rounded up to the next full 24-hour period,
                        is n 24-hour periods.

                        If units are specified, this primary evaluates to true if the
                        difference between the time of a file's inode creation and the time
                        find was started is exactly n units. Please refer to the -atime
                        primary description for information on supported time units.

       -acl             May be used in conjunction with other primaries to locate files
                        with extended ACLs. See acl(3) for more information.

       -amin [-|+]n     True if the difference between the file last access time and the
                        time find was started, rounded up to the next full minute, is more
                        than n (+n), less than n (-n), or exactly n minutes ago.

       -anewer file     Same as -neweram.

       -atime n[smhdw]  If no units are specified, this primary evaluates to true if the
                        difference between the file last access time and the time find was
                        started, rounded up to the next full 24-hour period, is n 24-hour
                        periods.

                        If units are specified, this primary evaluates to true if the
                        difference between the file last access time and the time find was
                        started is exactly n units. Possible time units are as follows:

                        s       second
                        m       minute (60 seconds)
                        h       hour (60 minutes)
                        d       day (24 hours)
                        w       week (7 days)

                        Any number of units may be combined in one -atime argument, for
                        example, "-atime -1h30m". Units are probably only useful when
                        used in conjunction with the + or - modifier.

       -cmin [-|+]n     True if the difference between the time of last change of file
                        status information and the time find was started, rounded up to
                        the next full minute, is more than n (+n), less than n (-n), or
                        exactly n minutes ago.

       -cnewer file     Same as -newercm.

       -ctime n[smhdw]  If no units are specified, this primary evaluates to true if the
                        difference between the time of last change of file status information
                        and the time find was started, rounded up to the next full 24-hour
                        period, is n 24-hour periods.

                        If units are specified, this primary evaluates to true if the
                        difference between the time of last change of file status information
                        and the time find was started is exactly n units. Please refer to
                        the -atime primary description for information on supported time units.

       -d               Non-portable, BSD-specific version of depth. GNU find implements
                        this as a primary in mistaken emulation of FreeBSD find.

       -delete          Delete found files and/or directories. Always returns true. This
                        executes from the current working directory as find recurses down the
                        tree. It will not attempt to delete a filename with a "/" character
                        in its pathname relative to "." for security reasons. Depth-first
                        traversal processing is implied by this option. The -delete primary
                        will fail to delete a directory if it is not empty. Following symlinks
                        is incompatible with this option.

                        WARNING: The -delete primary will immediately attempt to delete the
                        current path when evaluated. Be mindful of its place in the expression;
                        as a general rule, it should almost always come last. If in doubt, try
                        running with -print in place of -delete first. See "OPERATORS" below
                        for additional information on the order of evaluation.

       -depth           Always true; same as the non-portable -d option. Cause find to
                        perform a depth-first traversal, i.e., directories are visited in
                        post-order and all entries in a directory will be acted on before
                        the directory itself. By default, find visits directories in pre-order,
                        i.e., before their contents. Note, the default is not a breadth-first
                        traversal.

                        The -depth primary can be useful when find is used with cpio(1) to
                        process files that are contained in directories with unusual permissions.
                        It ensures that you have write permission while you are placing files
                        in a directory, then sets the directory's permissions as the last thing.

       -depth n         True if the depth of the file relative to the starting point of the
                        traversal is n.

       -empty           True if the current file or directory is empty.

       -exec utility [argument ...] ;
                        True if the program named utility returns a zero value as its exit
                        status. Optional arguments may be passed to the utility. The expression
                        must be terminated by a semicolon (";"). If you invoke find from a shell
                        you may need to quote the semicolon if the shell would otherwise treat it
                        as a control operator. If the string "{}" appears anywhere in the utility
                        name or the arguments it is replaced by the pathname of the

EXAMPLE
    find /home/user -name "*.txt"
    find . -type d -name "backup"

AUTHOR
    Written by David MacKenzie.

REPORTING BUG
    Report bugs to <bug-findutils@gnu.org>.

SEE ALSO
    find - GNU Findutils Documentation: https://www.gnu.org/software/findutils/manual/html_node/find-invocation.html

COPYRIGHT
    Copyright © 2024 Free Software Foundation, Inc.

COLOPHON
    This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
